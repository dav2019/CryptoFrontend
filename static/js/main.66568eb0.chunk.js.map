{"version":3,"sources":["components/Coins.js","components/Pagination.js","components/SearchCoin.js","App.js","reportWebVitals.js","index.js"],"names":["Coins","coins","loading","Spinner","animation","variant","role","size","className","map","coin","src","image","alt","width","height","thumbnail","name","symbol","current_price","Pagination","coinsPerPage","totalCoins","paginate","pageNumbers","i","Math","ceil","push","number","onClick","href","SearchCoin","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","App","setCoins","setLoading","currentPage","setCurrentPage","setGetQuery","useEffect","fetchCoins","a","searchInput","toLowerCase","axios","get","res","data","alert","console","log","indexOfLastCoin","indexOfFirstCoin","currentCoins","slice","Container","fluid","Row","Navbar","bg","expand","Brand","Nav","Link","Col","Table","striped","border","hover","responsive","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66568eb0.chunk.js","sourcesContent":["// import CoinsLayout from \"./CoinsLayout\";\nimport { Spinner } from 'react-bootstrap'\n\nconst Coins = ({ coins, loading }) => {\n    if(loading) {\n        return <Spinner animation='border' variant='primary' role='status' size='lg'>\n                  <span className='visually-hidden'>Loading...</span>\n                </Spinner>;\n    }\n\n    return (\n        <>\n        {coins.map((coin) => {\n          return (\n              <tbody>\n                <tr>\n                    <td><img src={coin.image} alt='crypto' width={171} height={180} thumbnail/></td>\n                    <td>{coin.name}</td>\n                    <td>{coin.symbol}</td>\n                    <td>${coin.current_price}</td>\n                </tr>\n              </tbody>\n          )\n        })}\n      </> \n    )\n    \n}\n\nexport default Coins\n\n","const Pagination = ({ coinsPerPage, totalCoins, paginate }) => {\n    const pageNumbers = [];\n\n    for(let i = 1; i<= Math.ceil(totalCoins / coinsPerPage); i++) {\n        pageNumbers.push(i);\n    };\n\n    return (\n        <nav>\n            <ul className='pagination' >\n                {pageNumbers.map(number =>(\n                    <li key={number} className='page-item'>\n                        <a onClick={() => paginate(number)} href='!#' className='page-link'>\n                            {number}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n            \n        </nav>\n    )\n}\n\nexport default Pagination\n\n","\nimport { useState } from 'react';\n\n\nconst SearchCoin = ( { getQuery } )=>  {\n    const [text, setText] = useState('')\n\n    const onChange = (q) => {\n        setText(q);\n        getQuery(q);\n    }\n\n\n    return (\n        <section className='search' data-testid='searchCoin-1'>\n            <form className='d-flex'>\n                <input\n                aria-label='search'\n                type='text'\n                className='form-control'\n                placeholder='Search'\n                value={text}\n                onChange={(e) => onChange(e.target.value)}\n                autoFocus\n                />\n            </form>\n        </section>\n    )\n}\n\nexport default SearchCoin\n","import { Container, Row, Col, Navbar, Nav, Table} from 'react-bootstrap';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport Coins from './components/Coins';\nimport Pagination from './components/Pagination';\nimport SearchCoin from './components/SearchCoin';\n\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [coinsPerPage] = useState(10);\n  const [getQuery, setGetQuery] = useState('');\n  \n\n  useEffect(() => {\n    const fetchCoins = async () => {\n      const searchInput = (getQuery) ? `&ids=${getQuery.toLowerCase()}` : '';\n      setLoading(true);\n      try {\n      const res = await axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=aud${searchInput}&order=market_cap_desc&per_page=100&page=1&sparkline=false`);\n      setCoins(res.data);\n      // console.log(res.data);\n      setLoading(false);\n      } catch(error) {\n        alert('Error Error');\n        console.log(\"error\", error);\n      }\n    }\n\n    fetchCoins();\n  }, [getQuery]);\n\n  // useEffect(() => {\n  //   const fetchCoins = async () => {\n  //     setLoading(true);\n  //     try {\n  //     const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=aud&order=market_cap_desc&per_page=100&page=1&sparkline=false');\n  //     setCoins(res.data);\n  //     // console.log(res.data);\n  //     setLoading(false);\n  //     } catch(error) {\n  //       alert('Error Error');\n  //       console.log(\"error\", error);\n  //     }\n  //   }\n\n  //   fetchCoins();\n  // }, []);\n\n  // useEffect(() => {\n  //   const search = async () => {\n  //     setLoading(true);\n  //     try {\n  //     const res = await axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=aud&ids=${searchInput.toLowerCase()}&order=market_cap_desc&per_page=100&page=1&sparkline=false`);\n  //     setCoins(res.data);\n  //     // console.log(res.data);\n  //     // console.log(searchInput);\n  //     setLoading(false);\n  //     } catch(error) {\n  //       alert('Error Error');\n  //       console.log(\"error\", error);\n  //     }\n  //   }\n\n  //   search();\n  // }, [searchInput]);\n\n\n  // Pagination Set Up\n  const indexOfLastCoin = currentPage * coinsPerPage;\n  const indexOfFirstCoin = indexOfLastCoin - coinsPerPage;\n  // Allows user to search a coin while on a different page and shows different coins for every page number\n  const currentCoins = (getQuery) ? coins : coins.slice(indexOfFirstCoin, indexOfLastCoin);\n\n  // Change Page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <Container fluid>\n      <Row>\n        <Navbar bg='dark' variant='dark' expand='lg'>;\n          <Container fluid>\n          <Navbar.Brand href='#home'>Cryptocurrency</Navbar.Brand>\n            <Nav className='me-auto'>\n            <Nav.Link href='#home'>Trending</Nav.Link>\n          </Nav>\n          <SearchCoin getQuery={(q) => setGetQuery(q)}/>\n          </Container>\n        </Navbar>\n      </Row>\n      <Row>\n        <Col>\n          <Table striped border hover responsive='sm'>\n            <thead>\n              <tr>\n                <th>Crypto Image</th>\n                <th>Crypto Name</th>\n                <th>Crypto Symbol</th>\n                <th>Current Price $AUD</th>\n              </tr>\n            </thead>\n            <Coins coins={currentCoins} loading={loading} />\n          </Table>\n        </Col>\n      </Row>\n      <Row>\n        <Pagination coinsPerPage={coinsPerPage} totalCoins={coins.length} paginate={paginate}/>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}